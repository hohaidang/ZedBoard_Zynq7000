-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity trafic_light is
port (
    l_sensor : IN STD_LOGIC;
    r_sensor : IN STD_LOGIC;
    u_sensor : IN STD_LOGIC;
    d_sensor : IN STD_LOGIC;
    ew_light : OUT STD_LOGIC;
    ns_light : OUT STD_LOGIC );
end;


architecture behav of trafic_light is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "trafic_light,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.934000,HLS_SYN_LAT=0,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=0,HLS_SYN_LUT=34,HLS_VERSION=2019_2}";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ew_rule_1_fu_72_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ew_rule_1_fu_72_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln22_fu_78_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln22_fu_78_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_fu_84_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_fu_84_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln22_fu_84_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln22_fu_78_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln22_1_fu_90_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ew_rule_1_fu_72_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln34_fu_102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln46_fu_114_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln46_fu_114_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln54_fu_120_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln54_fu_120_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln54_fu_120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln46_fu_114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln54_fu_126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_fu_138_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_fu_138_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_fu_138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln58_1_fu_144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ew_rule_5_fu_150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln81_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ew_rule_2_fu_96_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ns_rule_3_fu_108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ns_rule_4_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);


begin



    and_ln22_fu_84_p0 <= (0=>u_sensor, others=>'-');
    and_ln22_fu_84_p1 <= (0=>d_sensor, others=>'-');
    and_ln22_fu_84_p2 <= (and_ln22_fu_84_p1 and and_ln22_fu_84_p0);
    ew_light <= (or_ln81_fu_156_p2(0) or ew_rule_2_fu_96_p2(0));
    ew_rule_1_fu_72_p0 <= (0=>l_sensor, others=>'-');
    ew_rule_1_fu_72_p1 <= (0=>r_sensor, others=>'-');
    ew_rule_1_fu_72_p2 <= (ew_rule_1_fu_72_p1 and ew_rule_1_fu_72_p0);
    ew_rule_2_fu_96_p2 <= (xor_ln22_fu_78_p2 and xor_ln22_1_fu_90_p2);
    ew_rule_5_fu_150_p2 <= (or_ln58_1_fu_144_p2 xor ap_const_lv1_1);
    ns_light <= (ns_rule_4_fu_132_p2(0) or ns_rule_3_fu_108_p2(0));
    ns_rule_3_fu_108_p2 <= (xor_ln34_fu_102_p2 and and_ln22_fu_84_p2);
    ns_rule_4_fu_132_p2 <= (xor_ln54_fu_126_p2 and xor_ln46_fu_114_p2);
    or_ln54_fu_120_p0 <= (0=>r_sensor, others=>'-');
    or_ln54_fu_120_p1 <= (0=>l_sensor, others=>'-');
    or_ln54_fu_120_p2 <= (or_ln54_fu_120_p1 or or_ln54_fu_120_p0);
    or_ln58_1_fu_144_p2 <= (or_ln58_fu_138_p2 or or_ln54_fu_120_p2);
    or_ln58_fu_138_p0 <= (0=>d_sensor, others=>'-');
    or_ln58_fu_138_p1 <= (0=>u_sensor, others=>'-');
    or_ln58_fu_138_p2 <= (or_ln58_fu_138_p1 or or_ln58_fu_138_p0);
    or_ln81_fu_156_p2 <= (ew_rule_5_fu_150_p2 or ew_rule_1_fu_72_p2);
    xor_ln22_1_fu_90_p2 <= (ap_const_lv1_1 xor and_ln22_fu_84_p2);
    xor_ln22_fu_78_p0 <= (0=>l_sensor, others=>'-');
    xor_ln22_fu_78_p1 <= (0=>r_sensor, others=>'-');
    xor_ln22_fu_78_p2 <= (xor_ln22_fu_78_p1 xor xor_ln22_fu_78_p0);
    xor_ln34_fu_102_p2 <= (ew_rule_1_fu_72_p2 xor ap_const_lv1_1);
    xor_ln46_fu_114_p0 <= (0=>u_sensor, others=>'-');
    xor_ln46_fu_114_p1 <= (0=>d_sensor, others=>'-');
    xor_ln46_fu_114_p2 <= (xor_ln46_fu_114_p1 xor xor_ln46_fu_114_p0);
    xor_ln54_fu_126_p2 <= (or_ln54_fu_120_p2 xor ap_const_lv1_1);
end behav;
